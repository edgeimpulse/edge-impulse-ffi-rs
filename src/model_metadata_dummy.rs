#![allow(warnings, non_snake_case_types)]
// This file is @generated by build.rs. Do not edit manually.
// Dummy model metadata for development when no model is present

// Dummy constants that won't cause compilation errors
pub const EI_CLASSIFIER_SENSOR: i32 = 0;
pub const EI_CLASSIFIER_FREQUENCY: usize = 16000;
pub const EI_CLASSIFIER_RAW_SAMPLE_COUNT: usize = 512;
pub const EI_CLASSIFIER_RAW_SAMPLE_COUNT_F32: f32 = 512.0;
pub const EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE: usize = 512;
pub const EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE_F32: f32 = 512.0;
pub const EI_CLASSIFIER_INPUT_WIDTH: usize = 96;
pub const EI_CLASSIFIER_INPUT_HEIGHT: usize = 96;
pub const EI_CLASSIFIER_INPUT_FRAMES: usize = 1;
pub const EI_CLASSIFIER_LABEL_COUNT: usize = 2;
pub const EI_CLASSIFIER_HAS_ANOMALY: usize = 0;
pub const EI_CLASSIFIER_HAS_VISUAL_ANOMALY: usize = 0;
pub const EI_CLASSIFIER_HAS_OBJECT_DETECTION: usize = 0;
pub const EI_CLASSIFIER_OBJECT_DETECTION_COUNT: usize = 0;
pub const EI_CLASSIFIER_OBJECT_DETECTION_THRESHOLD: f32 = 0.5;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_DATA_TENSOR: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_SCORES_TENSOR: usize = 1;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_LABELS_TENSOR: usize = 2;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_ANOMALY_TENSOR: usize = 3;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_OBJECT_DETECTION_TENSOR: usize = 4;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_OBJECT_DETECTION_COUNT_TENSOR: usize = 5;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_OBJECT_DETECTION_BOUNDING_BOXES_TENSOR: usize = 6;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_OBJECT_DETECTION_LABELS_TENSOR: usize = 7;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_OBJECT_DETECTION_SCORES_TENSOR: usize = 8;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_TENSOR: usize = 9;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_GRID_TENSOR: usize = 10;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_BASE_TENSOR: usize = 11;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_SCALE_TENSOR: usize = 12;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_MEAN_TENSOR: usize = 13;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_STD_TENSOR: usize = 14;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_THRESHOLD: f32 = 0.5;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_GRID_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_BASE_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_SCALE_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_MEAN_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_STD_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_THRESHOLD_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_GRID_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_BASE_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_SCALE_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_MEAN_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_STD_COUNT_COUNT: usize = 0;
pub const EI_CLASSIFIER_TFLITE_OUTPUT_VISUAL_ANOMALY_THRESHOLD_COUNT_COUNT: usize = 0;

// Extra dummy constants for FFI compatibility
pub const EI_CLASSIFIER_PROJECT_NAME: &str = "";
pub const EI_CLASSIFIER_PROJECT_OWNER: &str = "";
pub const EI_CLASSIFIER_PROJECT_ID: usize = 0;
pub const EI_CLASSIFIER_PROJECT_DEPLOY_VERSION: usize = 0;
pub const EI_CLASSIFIER_INFERENCING_ENGINE: usize = 0;
pub const EI_CLASSIFIER_INTERVAL_MS: usize = 0;
pub const EI_CLASSIFIER_SLICE_SIZE: usize = 0;
pub const EI_CLASSIFIER_OBJECT_DETECTION: usize = 0;
pub const EI_CLASSIFIER_OBJECT_TRACKING_ENABLED: usize = 0;
pub const EI_CLASSIFIER_RAW_SAMPLES_PER_FRAME: usize = 0;
pub const EI_CLASSIFIER_NN_INPUT_FRAME_SIZE: usize = 0;

// Dummy resize mode constants for image processing
pub const EI_CLASSIFIER_RESIZE_SQUASH: usize = 3;
pub const EI_CLASSIFIER_RESIZE_FIT_SHORTEST: usize = 1;
pub const EI_CLASSIFIER_RESIZE_FIT_LONGEST: usize = 2;
pub const EI_CLASSIFIER_RESIZE_MODE: usize = EI_CLASSIFIER_RESIZE_SQUASH;

// Dummy error code constants (top-level and in a module)
pub const EI_IMPULSE_OK: i32 = 0;
pub const EI_IMPULSE_ERROR_SHAPES_DONT_MATCH: i32 = 1;
pub const EI_IMPULSE_CANCELED: i32 = 2;
pub const EI_IMPULSE_ALLOC_FAILED: i32 = 3;
pub const EI_IMPULSE_OUT_OF_MEMORY: i32 = 4;
pub const EI_IMPULSE_INPUT_TENSOR_WAS_NULL: i32 = 5;
pub const EI_IMPULSE_OUTPUT_TENSOR_WAS_NULL: i32 = 6;
pub const EI_IMPULSE_TFLITE_ERROR: i32 = 7;
pub const EI_IMPULSE_TFLITE_ARENA_ALLOC_FAILED: i32 = 8;
pub const EI_IMPULSE_DSP_ERROR: i32 = 9;
pub const EI_IMPULSE_INVALID_SIZE: i32 = 10;
pub const EI_IMPULSE_ONLY_SUPPORTED_FOR_IMAGES: i32 = 11;
pub const EI_IMPULSE_UNSUPPORTED_INFERENCING_ENGINE: i32 = 12;
pub const EI_IMPULSE_INFERENCE_ERROR: i32 = 13;

#[allow(non_snake_case)]
pub mod EI_IMPULSE_ERROR {
    pub const EI_IMPULSE_OK: i32 = 0;
    pub const EI_IMPULSE_ERROR_SHAPES_DONT_MATCH: i32 = 1;
    pub const EI_IMPULSE_CANCELED: i32 = 2;
    pub const EI_IMPULSE_ALLOC_FAILED: i32 = 3;
    pub const EI_IMPULSE_OUT_OF_MEMORY: i32 = 4;
    pub const EI_IMPULSE_INPUT_TENSOR_WAS_NULL: i32 = 5;
    pub const EI_IMPULSE_OUTPUT_TENSOR_WAS_NULL: i32 = 6;
    pub const EI_IMPULSE_TFLITE_ERROR: i32 = 7;
    pub const EI_IMPULSE_TFLITE_ARENA_ALLOC_FAILED: i32 = 8;
    pub const EI_IMPULSE_DSP_ERROR: i32 = 9;
    pub const EI_IMPULSE_INVALID_SIZE: i32 = 10;
    pub const EI_IMPULSE_ONLY_SUPPORTED_FOR_IMAGES: i32 = 11;
    pub const EI_IMPULSE_UNSUPPORTED_INFERENCING_ENGINE: i32 = 12;
    pub const EI_IMPULSE_INFERENCE_ERROR: i32 = 13;
}